{
    "src/GeneralStateTestsFiller/Pyspecs/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Cancun-state_test-call_create2_contract_in_between_False-call_create2_contract_at_the_end_True-create2_dest_already_in_state_False]" : {
        "_info" : {
            "comment" : "`execution-spec-tests` generated test",
            "description" : "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "filling-rpc-server" : "evm version 1.14.12-unstable-65e5ca7d-20241004",
            "filling-tool-version" : "retesteth-0.3.2-legacy+commit.be61b546.Linux.g++",
            "filling-transition-tool" : "evm version 1.14.12-unstable-65e5ca7d-20241004",
            "generatedTestHash" : "65970a6b34edf2f2c4b7650b8fef376010e12f58a95ef729e3c8c1c4b6568ba4",
            "hash" : "0x584743de70c9e528e65da45d4196e817b827df3fea5bbd92ca20bd5b428267dd",
            "lllcversion" : "Version: 0.5.14-develop.2024.11.5+commit.b2b86751.mod.Linux.g++",
            "solidity" : "Version: 0.8.24+commit.e11b9ed9.Linux.g++",
            "source" : "src/GeneralStateTestsFiller/Pyspecs/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py",
            "sourceHash" : "d08b028302812ac368698033359a8c3f224af566cf37e3e217af8138d687c8ad",
            "url" : "https://github.com/ethereum/execution-spec-tests/blob/f89d09ba99a3dc680dd9410f0b8a7f8d8fc36714/tests/tmp/tmptest_b80df164_89e6_48da_959c_52da99f9c350/test_dynamic_create2_selfdestruct_collision.py#L43"
        },
        "env" : {
            "currentBaseFee" : "0x07",
            "currentCoinbase" : "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentDifficulty" : "0x00",
            "currentExcessBlobGas" : "0x00",
            "currentGasLimit" : "0xff112233445566",
            "currentNumber" : "0x01",
            "currentRandom" : "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentTimestamp" : "0x03e8"
        },
        "post" : {
            "Cancun" : [
                {
                    "hash" : "0x85179a1cc8a3ce0a4a81ba2e51180c701a3407c8518c72617cca1e09b2b4eac2",
                    "indexes" : {
                        "data" : 0,
                        "gas" : 0,
                        "value" : 0
                    },
                    "logs" : "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes" : "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067"
                }
            ]
        },
        "pre" : {
            "0x0000000000000000000000000000000000000512" : {
                "balance" : "0x6124fee993bc0000",
                "code" : "0x6001600155",
                "nonce" : "0x00",
                "storage" : {
                }
            },
            "0x0000000000000000000000000000000000000600" : {
                "balance" : "0x05f5e100",
                "code" : "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060646000620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127107351bbeb887a2638ae37ce69027395957c396ee327620186a0f16001600455",
                "nonce" : "0x00",
                "storage" : {
                    "0x02" : "0xff",
                    "0x03" : "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601" : {
                "balance" : "0x00",
                "code" : "0x366000600037600136600047f560005260206000f3",
                "nonce" : "0x00",
                "storage" : {
                }
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b" : {
                "balance" : "0x6124fee993bc0000",
                "code" : "0x",
                "nonce" : "0x00",
                "storage" : {
                }
            }
        },
        "transaction" : {
            "data" : [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "gasLimit" : [
                "0x4c4b40"
            ],
            "gasPrice" : "0x0a",
            "nonce" : "0x00",
            "secretKey" : "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8",
            "sender" : "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "to" : "0x0000000000000000000000000000000000000600",
            "value" : [
                "0x00"
            ]
        }
    },
    "src/GeneralStateTestsFiller/Pyspecs/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Cancun-state_test-call_create2_contract_in_between_False-call_create2_contract_at_the_end_True-create2_dest_already_in_state_True]" : {
        "_info" : {
            "comment" : "`execution-spec-tests` generated test",
            "description" : "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "filling-rpc-server" : "evm version 1.14.12-unstable-65e5ca7d-20241004",
            "filling-tool-version" : "retesteth-0.3.2-legacy+commit.be61b546.Linux.g++",
            "filling-transition-tool" : "evm version 1.14.12-unstable-65e5ca7d-20241004",
            "generatedTestHash" : "0f30681cb46e657aed6aed3c97f371f1aa8485ab2aeca65b73414f7c080b6115",
            "hash" : "0x70ec71a39e377987c9264aa5bd395728addec96215dc09757df8460a9aab1a16",
            "lllcversion" : "Version: 0.5.14-develop.2024.11.5+commit.b2b86751.mod.Linux.g++",
            "solidity" : "Version: 0.8.24+commit.e11b9ed9.Linux.g++",
            "source" : "src/GeneralStateTestsFiller/Pyspecs/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py",
            "sourceHash" : "d08b028302812ac368698033359a8c3f224af566cf37e3e217af8138d687c8ad",
            "url" : "https://github.com/ethereum/execution-spec-tests/blob/f89d09ba99a3dc680dd9410f0b8a7f8d8fc36714/tests/tmp/tmptest_b80df164_89e6_48da_959c_52da99f9c350/test_dynamic_create2_selfdestruct_collision.py#L43"
        },
        "env" : {
            "currentBaseFee" : "0x07",
            "currentCoinbase" : "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentDifficulty" : "0x00",
            "currentExcessBlobGas" : "0x00",
            "currentGasLimit" : "0xff112233445566",
            "currentNumber" : "0x01",
            "currentRandom" : "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentTimestamp" : "0x03e8"
        },
        "post" : {
            "Cancun" : [
                {
                    "hash" : "0x1871612c1ac9032ce6ece34af51575fbf2e4a6f41e70dd49d2f417c8e202e2b0",
                    "indexes" : {
                        "data" : 0,
                        "gas" : 0,
                        "value" : 0
                    },
                    "logs" : "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes" : "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067"
                }
            ]
        },
        "pre" : {
            "0x0000000000000000000000000000000000000512" : {
                "balance" : "0x6124fee993bc0000",
                "code" : "0x6001600155",
                "nonce" : "0x00",
                "storage" : {
                }
            },
            "0x0000000000000000000000000000000000000600" : {
                "balance" : "0x05f5e100",
                "code" : "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060646000620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127107351bbeb887a2638ae37ce69027395957c396ee327620186a0f16001600455",
                "nonce" : "0x00",
                "storage" : {
                    "0x02" : "0xff",
                    "0x03" : "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601" : {
                "balance" : "0x00",
                "code" : "0x366000600037600136600047f560005260206000f3",
                "nonce" : "0x00",
                "storage" : {
                }
            },
            "0x51bbeb887a2638ae37ce69027395957c396ee327" : {
                "balance" : "0x01",
                "code" : "0x6103e8ff",
                "nonce" : "0x01",
                "storage" : {
                }
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b" : {
                "balance" : "0x6124fee993bc0000",
                "code" : "0x",
                "nonce" : "0x00",
                "storage" : {
                }
            }
        },
        "transaction" : {
            "data" : [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "gasLimit" : [
                "0x4c4b40"
            ],
            "gasPrice" : "0x0a",
            "nonce" : "0x00",
            "secretKey" : "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8",
            "sender" : "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "to" : "0x0000000000000000000000000000000000000600",
            "value" : [
                "0x00"
            ]
        }
    },
    "src/GeneralStateTestsFiller/Pyspecs/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Cancun-state_test-call_create2_contract_in_between_True-call_create2_contract_at_the_end_False-create2_dest_already_in_state_False]" : {
        "_info" : {
            "comment" : "`execution-spec-tests` generated test",
            "description" : "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "filling-rpc-server" : "evm version 1.14.12-unstable-65e5ca7d-20241004",
            "filling-tool-version" : "retesteth-0.3.2-legacy+commit.be61b546.Linux.g++",
            "filling-transition-tool" : "evm version 1.14.12-unstable-65e5ca7d-20241004",
            "generatedTestHash" : "16c1f95ec75b048205ede42d05a68bfe8ef322ca1610dbb2cb1874e6dd8996d8",
            "hash" : "0xd2a816d8310bfb5cdc5b1fdee06d24192a0e31617716e569395581b6478811aa",
            "lllcversion" : "Version: 0.5.14-develop.2024.11.5+commit.b2b86751.mod.Linux.g++",
            "solidity" : "Version: 0.8.24+commit.e11b9ed9.Linux.g++",
            "source" : "src/GeneralStateTestsFiller/Pyspecs/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py",
            "sourceHash" : "d08b028302812ac368698033359a8c3f224af566cf37e3e217af8138d687c8ad",
            "url" : "https://github.com/ethereum/execution-spec-tests/blob/f89d09ba99a3dc680dd9410f0b8a7f8d8fc36714/tests/tmp/tmptest_b80df164_89e6_48da_959c_52da99f9c350/test_dynamic_create2_selfdestruct_collision.py#L43"
        },
        "env" : {
            "currentBaseFee" : "0x07",
            "currentCoinbase" : "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentDifficulty" : "0x00",
            "currentExcessBlobGas" : "0x00",
            "currentGasLimit" : "0xff112233445566",
            "currentNumber" : "0x01",
            "currentRandom" : "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentTimestamp" : "0x03e8"
        },
        "post" : {
            "Cancun" : [
                {
                    "hash" : "0x00dd4e12b073faf90e9bfc450d4bcfebf6d869ef2e120b89df8654b5d8e6e362",
                    "indexes" : {
                        "data" : 0,
                        "gas" : 0,
                        "value" : 0
                    },
                    "logs" : "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes" : "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067"
                }
            ]
        },
        "pre" : {
            "0x0000000000000000000000000000000000000512" : {
                "balance" : "0x6124fee993bc0000",
                "code" : "0x6001600155",
                "nonce" : "0x00",
                "storage" : {
                }
            },
            "0x0000000000000000000000000000000000000600" : {
                "balance" : "0x05f5e100",
                "code" : "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060647351bbeb887a2638ae37ce69027395957c396ee327620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127106000620186a0f16001600455",
                "nonce" : "0x00",
                "storage" : {
                    "0x02" : "0xff",
                    "0x03" : "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601" : {
                "balance" : "0x00",
                "code" : "0x366000600037600136600047f560005260206000f3",
                "nonce" : "0x00",
                "storage" : {
                }
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b" : {
                "balance" : "0x6124fee993bc0000",
                "code" : "0x",
                "nonce" : "0x00",
                "storage" : {
                }
            }
        },
        "transaction" : {
            "data" : [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "gasLimit" : [
                "0x4c4b40"
            ],
            "gasPrice" : "0x0a",
            "nonce" : "0x00",
            "secretKey" : "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8",
            "sender" : "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "to" : "0x0000000000000000000000000000000000000600",
            "value" : [
                "0x00"
            ]
        }
    },
    "src/GeneralStateTestsFiller/Pyspecs/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Cancun-state_test-call_create2_contract_in_between_True-call_create2_contract_at_the_end_False-create2_dest_already_in_state_True]" : {
        "_info" : {
            "comment" : "`execution-spec-tests` generated test",
            "description" : "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "filling-rpc-server" : "evm version 1.14.12-unstable-65e5ca7d-20241004",
            "filling-tool-version" : "retesteth-0.3.2-legacy+commit.be61b546.Linux.g++",
            "filling-transition-tool" : "evm version 1.14.12-unstable-65e5ca7d-20241004",
            "generatedTestHash" : "e55aaa39ba6b2d28b47038d55636f4c3ad5257e8ce518dca1f063b8489156bbe",
            "hash" : "0x44c95d81b09ae141f4f533c0da46c66acbb4a6b2d142096fdb384b14f8ce0e4c",
            "lllcversion" : "Version: 0.5.14-develop.2024.11.5+commit.b2b86751.mod.Linux.g++",
            "solidity" : "Version: 0.8.24+commit.e11b9ed9.Linux.g++",
            "source" : "src/GeneralStateTestsFiller/Pyspecs/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py",
            "sourceHash" : "d08b028302812ac368698033359a8c3f224af566cf37e3e217af8138d687c8ad",
            "url" : "https://github.com/ethereum/execution-spec-tests/blob/f89d09ba99a3dc680dd9410f0b8a7f8d8fc36714/tests/tmp/tmptest_b80df164_89e6_48da_959c_52da99f9c350/test_dynamic_create2_selfdestruct_collision.py#L43"
        },
        "env" : {
            "currentBaseFee" : "0x07",
            "currentCoinbase" : "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentDifficulty" : "0x00",
            "currentExcessBlobGas" : "0x00",
            "currentGasLimit" : "0xff112233445566",
            "currentNumber" : "0x01",
            "currentRandom" : "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentTimestamp" : "0x03e8"
        },
        "post" : {
            "Cancun" : [
                {
                    "hash" : "0x2bae7a77dff5888ad7a49b9c609bf4904de6ae975751986ea9cf95427fdf0a3c",
                    "indexes" : {
                        "data" : 0,
                        "gas" : 0,
                        "value" : 0
                    },
                    "logs" : "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes" : "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067"
                }
            ]
        },
        "pre" : {
            "0x0000000000000000000000000000000000000512" : {
                "balance" : "0x6124fee993bc0000",
                "code" : "0x6001600155",
                "nonce" : "0x00",
                "storage" : {
                }
            },
            "0x0000000000000000000000000000000000000600" : {
                "balance" : "0x05f5e100",
                "code" : "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060647351bbeb887a2638ae37ce69027395957c396ee327620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127106000620186a0f16001600455",
                "nonce" : "0x00",
                "storage" : {
                    "0x02" : "0xff",
                    "0x03" : "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601" : {
                "balance" : "0x00",
                "code" : "0x366000600037600136600047f560005260206000f3",
                "nonce" : "0x00",
                "storage" : {
                }
            },
            "0x51bbeb887a2638ae37ce69027395957c396ee327" : {
                "balance" : "0x01",
                "code" : "0x6103e8ff",
                "nonce" : "0x01",
                "storage" : {
                }
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b" : {
                "balance" : "0x6124fee993bc0000",
                "code" : "0x",
                "nonce" : "0x00",
                "storage" : {
                }
            }
        },
        "transaction" : {
            "data" : [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "gasLimit" : [
                "0x4c4b40"
            ],
            "gasPrice" : "0x0a",
            "nonce" : "0x00",
            "secretKey" : "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8",
            "sender" : "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "to" : "0x0000000000000000000000000000000000000600",
            "value" : [
                "0x00"
            ]
        }
    },
    "src/GeneralStateTestsFiller/Pyspecs/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Cancun-state_test-call_create2_contract_in_between_True-call_create2_contract_at_the_end_True-create2_dest_already_in_state_False]" : {
        "_info" : {
            "comment" : "`execution-spec-tests` generated test",
            "description" : "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "filling-rpc-server" : "evm version 1.14.12-unstable-65e5ca7d-20241004",
            "filling-tool-version" : "retesteth-0.3.2-legacy+commit.be61b546.Linux.g++",
            "filling-transition-tool" : "evm version 1.14.12-unstable-65e5ca7d-20241004",
            "generatedTestHash" : "d5bc07ca50dd525910dcd23f3b8734c425c008c2dbae1b3dc8db8b02d2fa8273",
            "hash" : "0x9c0e8267d1fac6570d6a8603b48efc1af16b70a5066ac4ac69a1f7a82ecb1b38",
            "lllcversion" : "Version: 0.5.14-develop.2024.11.5+commit.b2b86751.mod.Linux.g++",
            "solidity" : "Version: 0.8.24+commit.e11b9ed9.Linux.g++",
            "source" : "src/GeneralStateTestsFiller/Pyspecs/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py",
            "sourceHash" : "d08b028302812ac368698033359a8c3f224af566cf37e3e217af8138d687c8ad",
            "url" : "https://github.com/ethereum/execution-spec-tests/blob/f89d09ba99a3dc680dd9410f0b8a7f8d8fc36714/tests/tmp/tmptest_b80df164_89e6_48da_959c_52da99f9c350/test_dynamic_create2_selfdestruct_collision.py#L43"
        },
        "env" : {
            "currentBaseFee" : "0x07",
            "currentCoinbase" : "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentDifficulty" : "0x00",
            "currentExcessBlobGas" : "0x00",
            "currentGasLimit" : "0xff112233445566",
            "currentNumber" : "0x01",
            "currentRandom" : "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentTimestamp" : "0x03e8"
        },
        "post" : {
            "Cancun" : [
                {
                    "hash" : "0x39e44f2b0bb4ddeda403047aad46851174935e305d68f365481e8b4b5f3af689",
                    "indexes" : {
                        "data" : 0,
                        "gas" : 0,
                        "value" : 0
                    },
                    "logs" : "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes" : "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067"
                }
            ]
        },
        "pre" : {
            "0x0000000000000000000000000000000000000512" : {
                "balance" : "0x6124fee993bc0000",
                "code" : "0x6001600155",
                "nonce" : "0x00",
                "storage" : {
                }
            },
            "0x0000000000000000000000000000000000000600" : {
                "balance" : "0x05f5e100",
                "code" : "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060647351bbeb887a2638ae37ce69027395957c396ee327620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127107351bbeb887a2638ae37ce69027395957c396ee327620186a0f16001600455",
                "nonce" : "0x00",
                "storage" : {
                    "0x02" : "0xff",
                    "0x03" : "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601" : {
                "balance" : "0x00",
                "code" : "0x366000600037600136600047f560005260206000f3",
                "nonce" : "0x00",
                "storage" : {
                }
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b" : {
                "balance" : "0x6124fee993bc0000",
                "code" : "0x",
                "nonce" : "0x00",
                "storage" : {
                }
            }
        },
        "transaction" : {
            "data" : [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "gasLimit" : [
                "0x4c4b40"
            ],
            "gasPrice" : "0x0a",
            "nonce" : "0x00",
            "secretKey" : "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8",
            "sender" : "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "to" : "0x0000000000000000000000000000000000000600",
            "value" : [
                "0x00"
            ]
        }
    },
    "src/GeneralStateTestsFiller/Pyspecs/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Cancun-state_test-call_create2_contract_in_between_True-call_create2_contract_at_the_end_True-create2_dest_already_in_state_True]" : {
        "_info" : {
            "comment" : "`execution-spec-tests` generated test",
            "description" : "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "filling-rpc-server" : "evm version 1.14.12-unstable-65e5ca7d-20241004",
            "filling-tool-version" : "retesteth-0.3.2-legacy+commit.be61b546.Linux.g++",
            "filling-transition-tool" : "evm version 1.14.12-unstable-65e5ca7d-20241004",
            "generatedTestHash" : "4b34d403df0a491f01828a8b0f8ad5eed0f4354c55f573162373da968498f94b",
            "hash" : "0xc25b492f161892f3789c442c821691e7e3935836f43bc31d702edecabbcdb5c4",
            "lllcversion" : "Version: 0.5.14-develop.2024.11.5+commit.b2b86751.mod.Linux.g++",
            "solidity" : "Version: 0.8.24+commit.e11b9ed9.Linux.g++",
            "source" : "src/GeneralStateTestsFiller/Pyspecs/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py",
            "sourceHash" : "d08b028302812ac368698033359a8c3f224af566cf37e3e217af8138d687c8ad",
            "url" : "https://github.com/ethereum/execution-spec-tests/blob/f89d09ba99a3dc680dd9410f0b8a7f8d8fc36714/tests/tmp/tmptest_b80df164_89e6_48da_959c_52da99f9c350/test_dynamic_create2_selfdestruct_collision.py#L43"
        },
        "env" : {
            "currentBaseFee" : "0x07",
            "currentCoinbase" : "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentDifficulty" : "0x00",
            "currentExcessBlobGas" : "0x00",
            "currentGasLimit" : "0xff112233445566",
            "currentNumber" : "0x01",
            "currentRandom" : "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentTimestamp" : "0x03e8"
        },
        "post" : {
            "Cancun" : [
                {
                    "hash" : "0x85777b9988f2a223866b1bf9f6e6ff2cd18817253d2707fa5243266c25fdfcc1",
                    "indexes" : {
                        "data" : 0,
                        "gas" : 0,
                        "value" : 0
                    },
                    "logs" : "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes" : "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067"
                }
            ]
        },
        "pre" : {
            "0x0000000000000000000000000000000000000512" : {
                "balance" : "0x6124fee993bc0000",
                "code" : "0x6001600155",
                "nonce" : "0x00",
                "storage" : {
                }
            },
            "0x0000000000000000000000000000000000000600" : {
                "balance" : "0x05f5e100",
                "code" : "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060647351bbeb887a2638ae37ce69027395957c396ee327620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127107351bbeb887a2638ae37ce69027395957c396ee327620186a0f16001600455",
                "nonce" : "0x00",
                "storage" : {
                    "0x02" : "0xff",
                    "0x03" : "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601" : {
                "balance" : "0x00",
                "code" : "0x366000600037600136600047f560005260206000f3",
                "nonce" : "0x00",
                "storage" : {
                }
            },
            "0x51bbeb887a2638ae37ce69027395957c396ee327" : {
                "balance" : "0x01",
                "code" : "0x6103e8ff",
                "nonce" : "0x01",
                "storage" : {
                }
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b" : {
                "balance" : "0x6124fee993bc0000",
                "code" : "0x",
                "nonce" : "0x00",
                "storage" : {
                }
            }
        },
        "transaction" : {
            "data" : [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "gasLimit" : [
                "0x4c4b40"
            ],
            "gasPrice" : "0x0a",
            "nonce" : "0x00",
            "secretKey" : "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8",
            "sender" : "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "to" : "0x0000000000000000000000000000000000000600",
            "value" : [
                "0x00"
            ]
        }
    },
    "src/GeneralStateTestsFiller/Pyspecs/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Paris-state_test-call_create2_contract_in_between_False-call_create2_contract_at_the_end_True-create2_dest_already_in_state_False]" : {
        "_info" : {
            "comment" : "`execution-spec-tests` generated test",
            "description" : "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "filling-rpc-server" : "evm version 1.14.12-unstable-65e5ca7d-20241004",
            "filling-tool-version" : "retesteth-0.3.2-legacy+commit.be61b546.Linux.g++",
            "filling-transition-tool" : "evm version 1.14.12-unstable-65e5ca7d-20241004",
            "generatedTestHash" : "4270328001cb8e33e5ea368fba9aad473d7c8d9c1bf130dfa77bd2dadbb4b434",
            "hash" : "0x0a7b04790bbf90dc3ba181bcb613e65a92936f915c82a451c35ff7e42e93cc68",
            "lllcversion" : "Version: 0.5.14-develop.2024.11.5+commit.b2b86751.mod.Linux.g++",
            "solidity" : "Version: 0.8.24+commit.e11b9ed9.Linux.g++",
            "source" : "src/GeneralStateTestsFiller/Pyspecs/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py",
            "sourceHash" : "d08b028302812ac368698033359a8c3f224af566cf37e3e217af8138d687c8ad",
            "url" : "https://github.com/ethereum/execution-spec-tests/blob/f89d09ba99a3dc680dd9410f0b8a7f8d8fc36714/tests/tmp/tmptest_b80df164_89e6_48da_959c_52da99f9c350/test_dynamic_create2_selfdestruct_collision.py#L43"
        },
        "env" : {
            "currentBaseFee" : "0x07",
            "currentCoinbase" : "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentDifficulty" : "0x00",
            "currentGasLimit" : "0xff112233445566",
            "currentNumber" : "0x01",
            "currentRandom" : "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentTimestamp" : "0x03e8"
        },
        "post" : {
            "Paris" : [
                {
                    "hash" : "0xac4063b51ea91d8e1db5fac74d9095bb9773b5ce40fb2cf4e570f1a2e0e1bcd0",
                    "indexes" : {
                        "data" : 0,
                        "gas" : 0,
                        "value" : 0
                    },
                    "logs" : "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes" : "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067"
                }
            ]
        },
        "pre" : {
            "0x0000000000000000000000000000000000000512" : {
                "balance" : "0x6124fee993bc0000",
                "code" : "0x6001600155",
                "nonce" : "0x00",
                "storage" : {
                }
            },
            "0x0000000000000000000000000000000000000600" : {
                "balance" : "0x05f5e100",
                "code" : "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060646000620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127107351bbeb887a2638ae37ce69027395957c396ee327620186a0f16001600455",
                "nonce" : "0x00",
                "storage" : {
                    "0x02" : "0xff",
                    "0x03" : "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601" : {
                "balance" : "0x00",
                "code" : "0x366000600037600136600047f560005260206000f3",
                "nonce" : "0x00",
                "storage" : {
                }
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b" : {
                "balance" : "0x6124fee993bc0000",
                "code" : "0x",
                "nonce" : "0x00",
                "storage" : {
                }
            }
        },
        "transaction" : {
            "data" : [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "gasLimit" : [
                "0x4c4b40"
            ],
            "gasPrice" : "0x0a",
            "nonce" : "0x00",
            "secretKey" : "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8",
            "sender" : "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "to" : "0x0000000000000000000000000000000000000600",
            "value" : [
                "0x00"
            ]
        }
    },
    "src/GeneralStateTestsFiller/Pyspecs/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Paris-state_test-call_create2_contract_in_between_False-call_create2_contract_at_the_end_True-create2_dest_already_in_state_True]" : {
        "_info" : {
            "comment" : "`execution-spec-tests` generated test",
            "description" : "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "filling-rpc-server" : "evm version 1.14.12-unstable-65e5ca7d-20241004",
            "filling-tool-version" : "retesteth-0.3.2-legacy+commit.be61b546.Linux.g++",
            "filling-transition-tool" : "evm version 1.14.12-unstable-65e5ca7d-20241004",
            "generatedTestHash" : "da007c1aab9b9a4e889fa209aaf4117d2086770ebd54adc9695c62baf2998312",
            "hash" : "0xb117bafda551909498384bc1a3effb11892fe9008e5b182d69179aca8f93c061",
            "lllcversion" : "Version: 0.5.14-develop.2024.11.5+commit.b2b86751.mod.Linux.g++",
            "solidity" : "Version: 0.8.24+commit.e11b9ed9.Linux.g++",
            "source" : "src/GeneralStateTestsFiller/Pyspecs/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py",
            "sourceHash" : "d08b028302812ac368698033359a8c3f224af566cf37e3e217af8138d687c8ad",
            "url" : "https://github.com/ethereum/execution-spec-tests/blob/f89d09ba99a3dc680dd9410f0b8a7f8d8fc36714/tests/tmp/tmptest_b80df164_89e6_48da_959c_52da99f9c350/test_dynamic_create2_selfdestruct_collision.py#L43"
        },
        "env" : {
            "currentBaseFee" : "0x07",
            "currentCoinbase" : "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentDifficulty" : "0x00",
            "currentGasLimit" : "0xff112233445566",
            "currentNumber" : "0x01",
            "currentRandom" : "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentTimestamp" : "0x03e8"
        },
        "post" : {
            "Paris" : [
                {
                    "hash" : "0xd268d2365c092332344caed71ed9ba7854811b8ae01f4459b018942df3744d5f",
                    "indexes" : {
                        "data" : 0,
                        "gas" : 0,
                        "value" : 0
                    },
                    "logs" : "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes" : "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067"
                }
            ]
        },
        "pre" : {
            "0x0000000000000000000000000000000000000512" : {
                "balance" : "0x6124fee993bc0000",
                "code" : "0x6001600155",
                "nonce" : "0x00",
                "storage" : {
                }
            },
            "0x0000000000000000000000000000000000000600" : {
                "balance" : "0x05f5e100",
                "code" : "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060646000620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127107351bbeb887a2638ae37ce69027395957c396ee327620186a0f16001600455",
                "nonce" : "0x00",
                "storage" : {
                    "0x02" : "0xff",
                    "0x03" : "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601" : {
                "balance" : "0x00",
                "code" : "0x366000600037600136600047f560005260206000f3",
                "nonce" : "0x00",
                "storage" : {
                }
            },
            "0x51bbeb887a2638ae37ce69027395957c396ee327" : {
                "balance" : "0x01",
                "code" : "0x6103e8ff",
                "nonce" : "0x01",
                "storage" : {
                }
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b" : {
                "balance" : "0x6124fee993bc0000",
                "code" : "0x",
                "nonce" : "0x00",
                "storage" : {
                }
            }
        },
        "transaction" : {
            "data" : [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "gasLimit" : [
                "0x4c4b40"
            ],
            "gasPrice" : "0x0a",
            "nonce" : "0x00",
            "secretKey" : "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8",
            "sender" : "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "to" : "0x0000000000000000000000000000000000000600",
            "value" : [
                "0x00"
            ]
        }
    },
    "src/GeneralStateTestsFiller/Pyspecs/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Paris-state_test-call_create2_contract_in_between_True-call_create2_contract_at_the_end_False-create2_dest_already_in_state_False]" : {
        "_info" : {
            "comment" : "`execution-spec-tests` generated test",
            "description" : "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "filling-rpc-server" : "evm version 1.14.12-unstable-65e5ca7d-20241004",
            "filling-tool-version" : "retesteth-0.3.2-legacy+commit.be61b546.Linux.g++",
            "filling-transition-tool" : "evm version 1.14.12-unstable-65e5ca7d-20241004",
            "generatedTestHash" : "abc8e5e44a848cbe408010ba5408ae14c9631dbfa2a75ed837128851c50455ee",
            "hash" : "0x7c45f5cc5deee93508df484ab0b279624e1f0995062bcf9711d3f24407124eb7",
            "lllcversion" : "Version: 0.5.14-develop.2024.11.5+commit.b2b86751.mod.Linux.g++",
            "solidity" : "Version: 0.8.24+commit.e11b9ed9.Linux.g++",
            "source" : "src/GeneralStateTestsFiller/Pyspecs/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py",
            "sourceHash" : "d08b028302812ac368698033359a8c3f224af566cf37e3e217af8138d687c8ad",
            "url" : "https://github.com/ethereum/execution-spec-tests/blob/f89d09ba99a3dc680dd9410f0b8a7f8d8fc36714/tests/tmp/tmptest_b80df164_89e6_48da_959c_52da99f9c350/test_dynamic_create2_selfdestruct_collision.py#L43"
        },
        "env" : {
            "currentBaseFee" : "0x07",
            "currentCoinbase" : "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentDifficulty" : "0x00",
            "currentGasLimit" : "0xff112233445566",
            "currentNumber" : "0x01",
            "currentRandom" : "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentTimestamp" : "0x03e8"
        },
        "post" : {
            "Paris" : [
                {
                    "hash" : "0x7e5014bd4f655061cc7d01683f9ac4193f6c87437e7ba2772453e23769c976b1",
                    "indexes" : {
                        "data" : 0,
                        "gas" : 0,
                        "value" : 0
                    },
                    "logs" : "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes" : "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067"
                }
            ]
        },
        "pre" : {
            "0x0000000000000000000000000000000000000512" : {
                "balance" : "0x6124fee993bc0000",
                "code" : "0x6001600155",
                "nonce" : "0x00",
                "storage" : {
                }
            },
            "0x0000000000000000000000000000000000000600" : {
                "balance" : "0x05f5e100",
                "code" : "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060647351bbeb887a2638ae37ce69027395957c396ee327620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127106000620186a0f16001600455",
                "nonce" : "0x00",
                "storage" : {
                    "0x02" : "0xff",
                    "0x03" : "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601" : {
                "balance" : "0x00",
                "code" : "0x366000600037600136600047f560005260206000f3",
                "nonce" : "0x00",
                "storage" : {
                }
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b" : {
                "balance" : "0x6124fee993bc0000",
                "code" : "0x",
                "nonce" : "0x00",
                "storage" : {
                }
            }
        },
        "transaction" : {
            "data" : [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "gasLimit" : [
                "0x4c4b40"
            ],
            "gasPrice" : "0x0a",
            "nonce" : "0x00",
            "secretKey" : "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8",
            "sender" : "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "to" : "0x0000000000000000000000000000000000000600",
            "value" : [
                "0x00"
            ]
        }
    },
    "src/GeneralStateTestsFiller/Pyspecs/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Paris-state_test-call_create2_contract_in_between_True-call_create2_contract_at_the_end_False-create2_dest_already_in_state_True]" : {
        "_info" : {
            "comment" : "`execution-spec-tests` generated test",
            "description" : "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "filling-rpc-server" : "evm version 1.14.12-unstable-65e5ca7d-20241004",
            "filling-tool-version" : "retesteth-0.3.2-legacy+commit.be61b546.Linux.g++",
            "filling-transition-tool" : "evm version 1.14.12-unstable-65e5ca7d-20241004",
            "generatedTestHash" : "cc9b72b118096847498525ed5bbd2c3a75e1a1f78177fb31bf27fb96e43228e1",
            "hash" : "0x5647bd1c5ac2e382a5cf3070c99236b7a3710abc65a9fe37816f76f41f31e43b",
            "lllcversion" : "Version: 0.5.14-develop.2024.11.5+commit.b2b86751.mod.Linux.g++",
            "solidity" : "Version: 0.8.24+commit.e11b9ed9.Linux.g++",
            "source" : "src/GeneralStateTestsFiller/Pyspecs/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py",
            "sourceHash" : "d08b028302812ac368698033359a8c3f224af566cf37e3e217af8138d687c8ad",
            "url" : "https://github.com/ethereum/execution-spec-tests/blob/f89d09ba99a3dc680dd9410f0b8a7f8d8fc36714/tests/tmp/tmptest_b80df164_89e6_48da_959c_52da99f9c350/test_dynamic_create2_selfdestruct_collision.py#L43"
        },
        "env" : {
            "currentBaseFee" : "0x07",
            "currentCoinbase" : "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentDifficulty" : "0x00",
            "currentGasLimit" : "0xff112233445566",
            "currentNumber" : "0x01",
            "currentRandom" : "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentTimestamp" : "0x03e8"
        },
        "post" : {
            "Paris" : [
                {
                    "hash" : "0x93b96f3c9b71966969cbb483bb583d152c909fe9576b06c7e33f7ff1a43b5910",
                    "indexes" : {
                        "data" : 0,
                        "gas" : 0,
                        "value" : 0
                    },
                    "logs" : "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes" : "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067"
                }
            ]
        },
        "pre" : {
            "0x0000000000000000000000000000000000000512" : {
                "balance" : "0x6124fee993bc0000",
                "code" : "0x6001600155",
                "nonce" : "0x00",
                "storage" : {
                }
            },
            "0x0000000000000000000000000000000000000600" : {
                "balance" : "0x05f5e100",
                "code" : "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060647351bbeb887a2638ae37ce69027395957c396ee327620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127106000620186a0f16001600455",
                "nonce" : "0x00",
                "storage" : {
                    "0x02" : "0xff",
                    "0x03" : "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601" : {
                "balance" : "0x00",
                "code" : "0x366000600037600136600047f560005260206000f3",
                "nonce" : "0x00",
                "storage" : {
                }
            },
            "0x51bbeb887a2638ae37ce69027395957c396ee327" : {
                "balance" : "0x01",
                "code" : "0x6103e8ff",
                "nonce" : "0x01",
                "storage" : {
                }
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b" : {
                "balance" : "0x6124fee993bc0000",
                "code" : "0x",
                "nonce" : "0x00",
                "storage" : {
                }
            }
        },
        "transaction" : {
            "data" : [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "gasLimit" : [
                "0x4c4b40"
            ],
            "gasPrice" : "0x0a",
            "nonce" : "0x00",
            "secretKey" : "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8",
            "sender" : "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "to" : "0x0000000000000000000000000000000000000600",
            "value" : [
                "0x00"
            ]
        }
    },
    "src/GeneralStateTestsFiller/Pyspecs/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Paris-state_test-call_create2_contract_in_between_True-call_create2_contract_at_the_end_True-create2_dest_already_in_state_False]" : {
        "_info" : {
            "comment" : "`execution-spec-tests` generated test",
            "description" : "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "filling-rpc-server" : "evm version 1.14.12-unstable-65e5ca7d-20241004",
            "filling-tool-version" : "retesteth-0.3.2-legacy+commit.be61b546.Linux.g++",
            "filling-transition-tool" : "evm version 1.14.12-unstable-65e5ca7d-20241004",
            "generatedTestHash" : "f42adff78e21cafd972646b38d60443924603b0d7c6c537cf00cccffea1b3b74",
            "hash" : "0xfa37d2025b86e736be82af3160e1b115fc77857cea224547ae392f244554671f",
            "lllcversion" : "Version: 0.5.14-develop.2024.11.5+commit.b2b86751.mod.Linux.g++",
            "solidity" : "Version: 0.8.24+commit.e11b9ed9.Linux.g++",
            "source" : "src/GeneralStateTestsFiller/Pyspecs/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py",
            "sourceHash" : "d08b028302812ac368698033359a8c3f224af566cf37e3e217af8138d687c8ad",
            "url" : "https://github.com/ethereum/execution-spec-tests/blob/f89d09ba99a3dc680dd9410f0b8a7f8d8fc36714/tests/tmp/tmptest_b80df164_89e6_48da_959c_52da99f9c350/test_dynamic_create2_selfdestruct_collision.py#L43"
        },
        "env" : {
            "currentBaseFee" : "0x07",
            "currentCoinbase" : "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentDifficulty" : "0x00",
            "currentGasLimit" : "0xff112233445566",
            "currentNumber" : "0x01",
            "currentRandom" : "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentTimestamp" : "0x03e8"
        },
        "post" : {
            "Paris" : [
                {
                    "hash" : "0xc4c2e73447a6ff822b27903a914878887dd4ae6bd13f870eaba22da05e554f71",
                    "indexes" : {
                        "data" : 0,
                        "gas" : 0,
                        "value" : 0
                    },
                    "logs" : "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes" : "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067"
                }
            ]
        },
        "pre" : {
            "0x0000000000000000000000000000000000000512" : {
                "balance" : "0x6124fee993bc0000",
                "code" : "0x6001600155",
                "nonce" : "0x00",
                "storage" : {
                }
            },
            "0x0000000000000000000000000000000000000600" : {
                "balance" : "0x05f5e100",
                "code" : "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060647351bbeb887a2638ae37ce69027395957c396ee327620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127107351bbeb887a2638ae37ce69027395957c396ee327620186a0f16001600455",
                "nonce" : "0x00",
                "storage" : {
                    "0x02" : "0xff",
                    "0x03" : "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601" : {
                "balance" : "0x00",
                "code" : "0x366000600037600136600047f560005260206000f3",
                "nonce" : "0x00",
                "storage" : {
                }
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b" : {
                "balance" : "0x6124fee993bc0000",
                "code" : "0x",
                "nonce" : "0x00",
                "storage" : {
                }
            }
        },
        "transaction" : {
            "data" : [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "gasLimit" : [
                "0x4c4b40"
            ],
            "gasPrice" : "0x0a",
            "nonce" : "0x00",
            "secretKey" : "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8",
            "sender" : "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "to" : "0x0000000000000000000000000000000000000600",
            "value" : [
                "0x00"
            ]
        }
    },
    "src/GeneralStateTestsFiller/Pyspecs/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Paris-state_test-call_create2_contract_in_between_True-call_create2_contract_at_the_end_True-create2_dest_already_in_state_True]" : {
        "_info" : {
            "comment" : "`execution-spec-tests` generated test",
            "description" : "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "filling-rpc-server" : "evm version 1.14.12-unstable-65e5ca7d-20241004",
            "filling-tool-version" : "retesteth-0.3.2-legacy+commit.be61b546.Linux.g++",
            "filling-transition-tool" : "evm version 1.14.12-unstable-65e5ca7d-20241004",
            "generatedTestHash" : "9b0b1e1001d79bb6b3ff8aac15bbcee35b4bf546baa50a966d1cf14426e1f4f4",
            "hash" : "0x64b3fda113ca81fd25743c56cc651a4158f1a38ad60bf89b1ad2f7a91f0647bf",
            "lllcversion" : "Version: 0.5.14-develop.2024.11.5+commit.b2b86751.mod.Linux.g++",
            "solidity" : "Version: 0.8.24+commit.e11b9ed9.Linux.g++",
            "source" : "src/GeneralStateTestsFiller/Pyspecs/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py",
            "sourceHash" : "d08b028302812ac368698033359a8c3f224af566cf37e3e217af8138d687c8ad",
            "url" : "https://github.com/ethereum/execution-spec-tests/blob/f89d09ba99a3dc680dd9410f0b8a7f8d8fc36714/tests/tmp/tmptest_b80df164_89e6_48da_959c_52da99f9c350/test_dynamic_create2_selfdestruct_collision.py#L43"
        },
        "env" : {
            "currentBaseFee" : "0x07",
            "currentCoinbase" : "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentDifficulty" : "0x00",
            "currentGasLimit" : "0xff112233445566",
            "currentNumber" : "0x01",
            "currentRandom" : "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentTimestamp" : "0x03e8"
        },
        "post" : {
            "Paris" : [
                {
                    "hash" : "0xa178ca3bcc6ae6c235505c80a4970126973deedda3233de6e17459b3ce0c849b",
                    "indexes" : {
                        "data" : 0,
                        "gas" : 0,
                        "value" : 0
                    },
                    "logs" : "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes" : "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067"
                }
            ]
        },
        "pre" : {
            "0x0000000000000000000000000000000000000512" : {
                "balance" : "0x6124fee993bc0000",
                "code" : "0x6001600155",
                "nonce" : "0x00",
                "storage" : {
                }
            },
            "0x0000000000000000000000000000000000000600" : {
                "balance" : "0x05f5e100",
                "code" : "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060647351bbeb887a2638ae37ce69027395957c396ee327620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127107351bbeb887a2638ae37ce69027395957c396ee327620186a0f16001600455",
                "nonce" : "0x00",
                "storage" : {
                    "0x02" : "0xff",
                    "0x03" : "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601" : {
                "balance" : "0x00",
                "code" : "0x366000600037600136600047f560005260206000f3",
                "nonce" : "0x00",
                "storage" : {
                }
            },
            "0x51bbeb887a2638ae37ce69027395957c396ee327" : {
                "balance" : "0x01",
                "code" : "0x6103e8ff",
                "nonce" : "0x01",
                "storage" : {
                }
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b" : {
                "balance" : "0x6124fee993bc0000",
                "code" : "0x",
                "nonce" : "0x00",
                "storage" : {
                }
            }
        },
        "transaction" : {
            "data" : [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "gasLimit" : [
                "0x4c4b40"
            ],
            "gasPrice" : "0x0a",
            "nonce" : "0x00",
            "secretKey" : "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8",
            "sender" : "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "to" : "0x0000000000000000000000000000000000000600",
            "value" : [
                "0x00"
            ]
        }
    },
    "src/GeneralStateTestsFiller/Pyspecs/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Shanghai-state_test-call_create2_contract_in_between_False-call_create2_contract_at_the_end_True-create2_dest_already_in_state_False]" : {
        "_info" : {
            "comment" : "`execution-spec-tests` generated test",
            "description" : "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "filling-rpc-server" : "evm version 1.14.12-unstable-65e5ca7d-20241004",
            "filling-tool-version" : "retesteth-0.3.2-legacy+commit.be61b546.Linux.g++",
            "filling-transition-tool" : "evm version 1.14.12-unstable-65e5ca7d-20241004",
            "generatedTestHash" : "d4bb7233a237f01af9f0006ad1e2b5c7832fcab39b1250d71a0398af5a9e2c4f",
            "hash" : "0xb41fa16f0a08722144bc0abf350a8934c48b1fb8d0b5fa0b5cef95ab2ca3eba9",
            "lllcversion" : "Version: 0.5.14-develop.2024.11.5+commit.b2b86751.mod.Linux.g++",
            "solidity" : "Version: 0.8.24+commit.e11b9ed9.Linux.g++",
            "source" : "src/GeneralStateTestsFiller/Pyspecs/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py",
            "sourceHash" : "d08b028302812ac368698033359a8c3f224af566cf37e3e217af8138d687c8ad",
            "url" : "https://github.com/ethereum/execution-spec-tests/blob/f89d09ba99a3dc680dd9410f0b8a7f8d8fc36714/tests/tmp/tmptest_b80df164_89e6_48da_959c_52da99f9c350/test_dynamic_create2_selfdestruct_collision.py#L43"
        },
        "env" : {
            "currentBaseFee" : "0x07",
            "currentCoinbase" : "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentDifficulty" : "0x00",
            "currentGasLimit" : "0xff112233445566",
            "currentNumber" : "0x01",
            "currentRandom" : "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentTimestamp" : "0x03e8"
        },
        "post" : {
            "Shanghai" : [
                {
                    "hash" : "0x85179a1cc8a3ce0a4a81ba2e51180c701a3407c8518c72617cca1e09b2b4eac2",
                    "indexes" : {
                        "data" : 0,
                        "gas" : 0,
                        "value" : 0
                    },
                    "logs" : "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes" : "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067"
                }
            ]
        },
        "pre" : {
            "0x0000000000000000000000000000000000000512" : {
                "balance" : "0x6124fee993bc0000",
                "code" : "0x6001600155",
                "nonce" : "0x00",
                "storage" : {
                }
            },
            "0x0000000000000000000000000000000000000600" : {
                "balance" : "0x05f5e100",
                "code" : "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060646000620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127107351bbeb887a2638ae37ce69027395957c396ee327620186a0f16001600455",
                "nonce" : "0x00",
                "storage" : {
                    "0x02" : "0xff",
                    "0x03" : "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601" : {
                "balance" : "0x00",
                "code" : "0x366000600037600136600047f560005260206000f3",
                "nonce" : "0x00",
                "storage" : {
                }
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b" : {
                "balance" : "0x6124fee993bc0000",
                "code" : "0x",
                "nonce" : "0x00",
                "storage" : {
                }
            }
        },
        "transaction" : {
            "data" : [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "gasLimit" : [
                "0x4c4b40"
            ],
            "gasPrice" : "0x0a",
            "nonce" : "0x00",
            "secretKey" : "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8",
            "sender" : "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "to" : "0x0000000000000000000000000000000000000600",
            "value" : [
                "0x00"
            ]
        }
    },
    "src/GeneralStateTestsFiller/Pyspecs/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Shanghai-state_test-call_create2_contract_in_between_False-call_create2_contract_at_the_end_True-create2_dest_already_in_state_True]" : {
        "_info" : {
            "comment" : "`execution-spec-tests` generated test",
            "description" : "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "filling-rpc-server" : "evm version 1.14.12-unstable-65e5ca7d-20241004",
            "filling-tool-version" : "retesteth-0.3.2-legacy+commit.be61b546.Linux.g++",
            "filling-transition-tool" : "evm version 1.14.12-unstable-65e5ca7d-20241004",
            "generatedTestHash" : "4795d357203c7185b423fcc5c12df0decd8dbb9d25332cac725cee97e7383f18",
            "hash" : "0x1f07438d4113c95b8d8f84194bcd9dde0d556fbc03b74d382fe55a67ac948e12",
            "lllcversion" : "Version: 0.5.14-develop.2024.11.5+commit.b2b86751.mod.Linux.g++",
            "solidity" : "Version: 0.8.24+commit.e11b9ed9.Linux.g++",
            "source" : "src/GeneralStateTestsFiller/Pyspecs/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py",
            "sourceHash" : "d08b028302812ac368698033359a8c3f224af566cf37e3e217af8138d687c8ad",
            "url" : "https://github.com/ethereum/execution-spec-tests/blob/f89d09ba99a3dc680dd9410f0b8a7f8d8fc36714/tests/tmp/tmptest_b80df164_89e6_48da_959c_52da99f9c350/test_dynamic_create2_selfdestruct_collision.py#L43"
        },
        "env" : {
            "currentBaseFee" : "0x07",
            "currentCoinbase" : "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentDifficulty" : "0x00",
            "currentGasLimit" : "0xff112233445566",
            "currentNumber" : "0x01",
            "currentRandom" : "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentTimestamp" : "0x03e8"
        },
        "post" : {
            "Shanghai" : [
                {
                    "hash" : "0xd268d2365c092332344caed71ed9ba7854811b8ae01f4459b018942df3744d5f",
                    "indexes" : {
                        "data" : 0,
                        "gas" : 0,
                        "value" : 0
                    },
                    "logs" : "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes" : "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067"
                }
            ]
        },
        "pre" : {
            "0x0000000000000000000000000000000000000512" : {
                "balance" : "0x6124fee993bc0000",
                "code" : "0x6001600155",
                "nonce" : "0x00",
                "storage" : {
                }
            },
            "0x0000000000000000000000000000000000000600" : {
                "balance" : "0x05f5e100",
                "code" : "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060646000620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127107351bbeb887a2638ae37ce69027395957c396ee327620186a0f16001600455",
                "nonce" : "0x00",
                "storage" : {
                    "0x02" : "0xff",
                    "0x03" : "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601" : {
                "balance" : "0x00",
                "code" : "0x366000600037600136600047f560005260206000f3",
                "nonce" : "0x00",
                "storage" : {
                }
            },
            "0x51bbeb887a2638ae37ce69027395957c396ee327" : {
                "balance" : "0x01",
                "code" : "0x6103e8ff",
                "nonce" : "0x01",
                "storage" : {
                }
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b" : {
                "balance" : "0x6124fee993bc0000",
                "code" : "0x",
                "nonce" : "0x00",
                "storage" : {
                }
            }
        },
        "transaction" : {
            "data" : [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "gasLimit" : [
                "0x4c4b40"
            ],
            "gasPrice" : "0x0a",
            "nonce" : "0x00",
            "secretKey" : "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8",
            "sender" : "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "to" : "0x0000000000000000000000000000000000000600",
            "value" : [
                "0x00"
            ]
        }
    },
    "src/GeneralStateTestsFiller/Pyspecs/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Shanghai-state_test-call_create2_contract_in_between_True-call_create2_contract_at_the_end_False-create2_dest_already_in_state_False]" : {
        "_info" : {
            "comment" : "`execution-spec-tests` generated test",
            "description" : "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "filling-rpc-server" : "evm version 1.14.12-unstable-65e5ca7d-20241004",
            "filling-tool-version" : "retesteth-0.3.2-legacy+commit.be61b546.Linux.g++",
            "filling-transition-tool" : "evm version 1.14.12-unstable-65e5ca7d-20241004",
            "generatedTestHash" : "a2370b28e9638a43dc50c6c62e94bfece825922bd7b12d4097ec45393e9a97a7",
            "hash" : "0x4924d9599df779242787702019202d48f40e44b1ea2a2171a4cacc283c4d270e",
            "lllcversion" : "Version: 0.5.14-develop.2024.11.5+commit.b2b86751.mod.Linux.g++",
            "solidity" : "Version: 0.8.24+commit.e11b9ed9.Linux.g++",
            "source" : "src/GeneralStateTestsFiller/Pyspecs/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py",
            "sourceHash" : "d08b028302812ac368698033359a8c3f224af566cf37e3e217af8138d687c8ad",
            "url" : "https://github.com/ethereum/execution-spec-tests/blob/f89d09ba99a3dc680dd9410f0b8a7f8d8fc36714/tests/tmp/tmptest_b80df164_89e6_48da_959c_52da99f9c350/test_dynamic_create2_selfdestruct_collision.py#L43"
        },
        "env" : {
            "currentBaseFee" : "0x07",
            "currentCoinbase" : "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentDifficulty" : "0x00",
            "currentGasLimit" : "0xff112233445566",
            "currentNumber" : "0x01",
            "currentRandom" : "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentTimestamp" : "0x03e8"
        },
        "post" : {
            "Shanghai" : [
                {
                    "hash" : "0x00dd4e12b073faf90e9bfc450d4bcfebf6d869ef2e120b89df8654b5d8e6e362",
                    "indexes" : {
                        "data" : 0,
                        "gas" : 0,
                        "value" : 0
                    },
                    "logs" : "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes" : "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067"
                }
            ]
        },
        "pre" : {
            "0x0000000000000000000000000000000000000512" : {
                "balance" : "0x6124fee993bc0000",
                "code" : "0x6001600155",
                "nonce" : "0x00",
                "storage" : {
                }
            },
            "0x0000000000000000000000000000000000000600" : {
                "balance" : "0x05f5e100",
                "code" : "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060647351bbeb887a2638ae37ce69027395957c396ee327620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127106000620186a0f16001600455",
                "nonce" : "0x00",
                "storage" : {
                    "0x02" : "0xff",
                    "0x03" : "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601" : {
                "balance" : "0x00",
                "code" : "0x366000600037600136600047f560005260206000f3",
                "nonce" : "0x00",
                "storage" : {
                }
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b" : {
                "balance" : "0x6124fee993bc0000",
                "code" : "0x",
                "nonce" : "0x00",
                "storage" : {
                }
            }
        },
        "transaction" : {
            "data" : [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "gasLimit" : [
                "0x4c4b40"
            ],
            "gasPrice" : "0x0a",
            "nonce" : "0x00",
            "secretKey" : "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8",
            "sender" : "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "to" : "0x0000000000000000000000000000000000000600",
            "value" : [
                "0x00"
            ]
        }
    },
    "src/GeneralStateTestsFiller/Pyspecs/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Shanghai-state_test-call_create2_contract_in_between_True-call_create2_contract_at_the_end_False-create2_dest_already_in_state_True]" : {
        "_info" : {
            "comment" : "`execution-spec-tests` generated test",
            "description" : "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "filling-rpc-server" : "evm version 1.14.12-unstable-65e5ca7d-20241004",
            "filling-tool-version" : "retesteth-0.3.2-legacy+commit.be61b546.Linux.g++",
            "filling-transition-tool" : "evm version 1.14.12-unstable-65e5ca7d-20241004",
            "generatedTestHash" : "92354a90c09cc605c0f871664c7e0a7fb1a169e901851cc8fc932a5074eafe81",
            "hash" : "0xf4b1e174ccf8595e2656ac3baaa2cf33ea770707c63e0893fdb15b44e9105d13",
            "lllcversion" : "Version: 0.5.14-develop.2024.11.5+commit.b2b86751.mod.Linux.g++",
            "solidity" : "Version: 0.8.24+commit.e11b9ed9.Linux.g++",
            "source" : "src/GeneralStateTestsFiller/Pyspecs/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py",
            "sourceHash" : "d08b028302812ac368698033359a8c3f224af566cf37e3e217af8138d687c8ad",
            "url" : "https://github.com/ethereum/execution-spec-tests/blob/f89d09ba99a3dc680dd9410f0b8a7f8d8fc36714/tests/tmp/tmptest_b80df164_89e6_48da_959c_52da99f9c350/test_dynamic_create2_selfdestruct_collision.py#L43"
        },
        "env" : {
            "currentBaseFee" : "0x07",
            "currentCoinbase" : "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentDifficulty" : "0x00",
            "currentGasLimit" : "0xff112233445566",
            "currentNumber" : "0x01",
            "currentRandom" : "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentTimestamp" : "0x03e8"
        },
        "post" : {
            "Shanghai" : [
                {
                    "hash" : "0x93b96f3c9b71966969cbb483bb583d152c909fe9576b06c7e33f7ff1a43b5910",
                    "indexes" : {
                        "data" : 0,
                        "gas" : 0,
                        "value" : 0
                    },
                    "logs" : "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes" : "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067"
                }
            ]
        },
        "pre" : {
            "0x0000000000000000000000000000000000000512" : {
                "balance" : "0x6124fee993bc0000",
                "code" : "0x6001600155",
                "nonce" : "0x00",
                "storage" : {
                }
            },
            "0x0000000000000000000000000000000000000600" : {
                "balance" : "0x05f5e100",
                "code" : "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060647351bbeb887a2638ae37ce69027395957c396ee327620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127106000620186a0f16001600455",
                "nonce" : "0x00",
                "storage" : {
                    "0x02" : "0xff",
                    "0x03" : "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601" : {
                "balance" : "0x00",
                "code" : "0x366000600037600136600047f560005260206000f3",
                "nonce" : "0x00",
                "storage" : {
                }
            },
            "0x51bbeb887a2638ae37ce69027395957c396ee327" : {
                "balance" : "0x01",
                "code" : "0x6103e8ff",
                "nonce" : "0x01",
                "storage" : {
                }
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b" : {
                "balance" : "0x6124fee993bc0000",
                "code" : "0x",
                "nonce" : "0x00",
                "storage" : {
                }
            }
        },
        "transaction" : {
            "data" : [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "gasLimit" : [
                "0x4c4b40"
            ],
            "gasPrice" : "0x0a",
            "nonce" : "0x00",
            "secretKey" : "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8",
            "sender" : "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "to" : "0x0000000000000000000000000000000000000600",
            "value" : [
                "0x00"
            ]
        }
    },
    "src/GeneralStateTestsFiller/Pyspecs/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Shanghai-state_test-call_create2_contract_in_between_True-call_create2_contract_at_the_end_True-create2_dest_already_in_state_False]" : {
        "_info" : {
            "comment" : "`execution-spec-tests` generated test",
            "description" : "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "filling-rpc-server" : "evm version 1.14.12-unstable-65e5ca7d-20241004",
            "filling-tool-version" : "retesteth-0.3.2-legacy+commit.be61b546.Linux.g++",
            "filling-transition-tool" : "evm version 1.14.12-unstable-65e5ca7d-20241004",
            "generatedTestHash" : "a35fa9b8b0d8d2b98f2012e75bc07ac27640635026c3aeedaf9ff6029a231c0c",
            "hash" : "0x0affb37fff77ff5cbb715bdeede1ccba3ab7b61021a59ce4da0c830b009dd800",
            "lllcversion" : "Version: 0.5.14-develop.2024.11.5+commit.b2b86751.mod.Linux.g++",
            "solidity" : "Version: 0.8.24+commit.e11b9ed9.Linux.g++",
            "source" : "src/GeneralStateTestsFiller/Pyspecs/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py",
            "sourceHash" : "d08b028302812ac368698033359a8c3f224af566cf37e3e217af8138d687c8ad",
            "url" : "https://github.com/ethereum/execution-spec-tests/blob/f89d09ba99a3dc680dd9410f0b8a7f8d8fc36714/tests/tmp/tmptest_b80df164_89e6_48da_959c_52da99f9c350/test_dynamic_create2_selfdestruct_collision.py#L43"
        },
        "env" : {
            "currentBaseFee" : "0x07",
            "currentCoinbase" : "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentDifficulty" : "0x00",
            "currentGasLimit" : "0xff112233445566",
            "currentNumber" : "0x01",
            "currentRandom" : "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentTimestamp" : "0x03e8"
        },
        "post" : {
            "Shanghai" : [
                {
                    "hash" : "0x39e44f2b0bb4ddeda403047aad46851174935e305d68f365481e8b4b5f3af689",
                    "indexes" : {
                        "data" : 0,
                        "gas" : 0,
                        "value" : 0
                    },
                    "logs" : "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes" : "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067"
                }
            ]
        },
        "pre" : {
            "0x0000000000000000000000000000000000000512" : {
                "balance" : "0x6124fee993bc0000",
                "code" : "0x6001600155",
                "nonce" : "0x00",
                "storage" : {
                }
            },
            "0x0000000000000000000000000000000000000600" : {
                "balance" : "0x05f5e100",
                "code" : "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060647351bbeb887a2638ae37ce69027395957c396ee327620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127107351bbeb887a2638ae37ce69027395957c396ee327620186a0f16001600455",
                "nonce" : "0x00",
                "storage" : {
                    "0x02" : "0xff",
                    "0x03" : "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601" : {
                "balance" : "0x00",
                "code" : "0x366000600037600136600047f560005260206000f3",
                "nonce" : "0x00",
                "storage" : {
                }
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b" : {
                "balance" : "0x6124fee993bc0000",
                "code" : "0x",
                "nonce" : "0x00",
                "storage" : {
                }
            }
        },
        "transaction" : {
            "data" : [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "gasLimit" : [
                "0x4c4b40"
            ],
            "gasPrice" : "0x0a",
            "nonce" : "0x00",
            "secretKey" : "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8",
            "sender" : "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "to" : "0x0000000000000000000000000000000000000600",
            "value" : [
                "0x00"
            ]
        }
    },
    "src/GeneralStateTestsFiller/Pyspecs/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py::test_dynamic_create2_selfdestruct_collision[fork_Shanghai-state_test-call_create2_contract_in_between_True-call_create2_contract_at_the_end_True-create2_dest_already_in_state_True]" : {
        "_info" : {
            "comment" : "`execution-spec-tests` generated test",
            "description" : "Test function documentation:\nDynamic Create2->Suicide->Create2 collision scenario:\n\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then on a different call, in the same tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract   <=== Covered in this test\n            1) and create2 contract already in the state\n            2) and create2 contract is not in the state\n        b) on a different tx, attempt to recreate the contract\n    Perform a CREATE2, make sure that the initcode sets at least a couple of storage keys,\n    then in a different tx, perform a self-destruct.\n    Then:\n        a) on the same tx, attempt to recreate the contract\n        b) on a different tx, attempt to recreate the contract\n    Verify that the test case described\n    in https://wiki.hyperledger.org/pages/viewpage.action?pageId=117440824 is covered",
            "filling-rpc-server" : "evm version 1.14.12-unstable-65e5ca7d-20241004",
            "filling-tool-version" : "retesteth-0.3.2-legacy+commit.be61b546.Linux.g++",
            "filling-transition-tool" : "evm version 1.14.12-unstable-65e5ca7d-20241004",
            "generatedTestHash" : "1c76bfad3574d493801b5460f0afbc9be5998e8673149c1125957551011c4717",
            "hash" : "0xd7ed3bb3f5c12ae164dc42263a4653fcc285ad48bd2989a2bf711524989f8e23",
            "lllcversion" : "Version: 0.5.14-develop.2024.11.5+commit.b2b86751.mod.Linux.g++",
            "solidity" : "Version: 0.8.24+commit.e11b9ed9.Linux.g++",
            "source" : "src/GeneralStateTestsFiller/Pyspecs/cancun/eip6780_selfdestruct/test_dynamic_create2_selfdestruct_collision.py",
            "sourceHash" : "d08b028302812ac368698033359a8c3f224af566cf37e3e217af8138d687c8ad",
            "url" : "https://github.com/ethereum/execution-spec-tests/blob/f89d09ba99a3dc680dd9410f0b8a7f8d8fc36714/tests/tmp/tmptest_b80df164_89e6_48da_959c_52da99f9c350/test_dynamic_create2_selfdestruct_collision.py#L43"
        },
        "env" : {
            "currentBaseFee" : "0x07",
            "currentCoinbase" : "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
            "currentDifficulty" : "0x00",
            "currentGasLimit" : "0xff112233445566",
            "currentNumber" : "0x01",
            "currentRandom" : "0x0000000000000000000000000000000000000000000000000000000000000000",
            "currentTimestamp" : "0x03e8"
        },
        "post" : {
            "Shanghai" : [
                {
                    "hash" : "0xa178ca3bcc6ae6c235505c80a4970126973deedda3233de6e17459b3ce0c849b",
                    "indexes" : {
                        "data" : 0,
                        "gas" : 0,
                        "value" : 0
                    },
                    "logs" : "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                    "txbytes" : "0xf883800a834c4b4094000000000000000000000000000000000000060080a36001600155600060006000600060006105125af1610004600081601f8239f36103e8ff1ca092acadcef8cd2689a1aa4223338053cbceb8d0731c76ee88af155892ef6022c3a02cb42a841b7c8ea04933a04ad33567a8892a84af401a78df4ee310c040141067"
                }
            ]
        },
        "pre" : {
            "0x0000000000000000000000000000000000000512" : {
                "balance" : "0x6124fee993bc0000",
                "code" : "0x6001600155",
                "nonce" : "0x00",
                "storage" : {
                }
            },
            "0x0000000000000000000000000000000000000600" : {
                "balance" : "0x05f5e100",
                "code" : "0x5b36600060003760206000366000600a610601620186a0f160005160025560006000600060006000610601620186a0f1600060006000600060647351bbeb887a2638ae37ce69027395957c396ee327620186a0f1366000600037602060003660006103e8610601620186a0f160005160035560006000600060006127107351bbeb887a2638ae37ce69027395957c396ee327620186a0f16001600455",
                "nonce" : "0x00",
                "storage" : {
                    "0x02" : "0xff",
                    "0x03" : "0xff"
                }
            },
            "0x0000000000000000000000000000000000000601" : {
                "balance" : "0x00",
                "code" : "0x366000600037600136600047f560005260206000f3",
                "nonce" : "0x00",
                "storage" : {
                }
            },
            "0x51bbeb887a2638ae37ce69027395957c396ee327" : {
                "balance" : "0x01",
                "code" : "0x6103e8ff",
                "nonce" : "0x01",
                "storage" : {
                }
            },
            "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b" : {
                "balance" : "0x6124fee993bc0000",
                "code" : "0x",
                "nonce" : "0x00",
                "storage" : {
                }
            }
        },
        "transaction" : {
            "data" : [
                "0x6001600155600060006000600060006105125af1610004600081601f8239f36103e8ff"
            ],
            "gasLimit" : [
                "0x4c4b40"
            ],
            "gasPrice" : "0x0a",
            "nonce" : "0x00",
            "secretKey" : "0x45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8",
            "sender" : "0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b",
            "to" : "0x0000000000000000000000000000000000000600",
            "value" : [
                "0x00"
            ]
        }
    }
}